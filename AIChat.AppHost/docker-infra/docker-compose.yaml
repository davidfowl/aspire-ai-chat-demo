services:
  pg:
    image: "docker.io/library/postgres:17.2"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${PG_PASSWORD}"
    ports:
      - "8000:5432"
    volumes:
      - type: "volume"
        target: "/var/lib/postgresql/data"
        source: "pgvolume"
        read_only: false
    networks:
      - "aspire"
  cache:
    image: "docker.io/library/redis:7.4"
    command:
      - "-c"
      - "redis-server --requirepass $$REDIS_PASSWORD"
    entrypoint:
      - "/bin/sh"
    environment:
      REDIS_PASSWORD: "${CACHE_PASSWORD}"
    ports:
      - "8001:6379"
    networks:
      - "aspire"
  chatapi:
    image: "${CHATAPI_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8002"
      ConnectionStrings__llm: "AccessKey=${OPENAIKEY};Model=gpt-4o;Provider=OpenAI"
      ConnectionStrings__conversations: "Host=pg;Port=5432;Username=postgres;Password=${PG_PASSWORD};Database=conversations"
      ConnectionStrings__cache: "cache:6379,password=${CACHE_PASSWORD}"
    ports:
      - "8003:8002"
      - "8005:8004"
    depends_on:
      pg:
        condition: "service_started"
      cache:
        condition: "service_started"
    networks:
      - "aspire"
  chatui:
    image: "${CHATUI_IMAGE}"
    environment:
      NODE_ENV: "development"
      PORT: "80"
      BACKEND_URL: "chatapi:8002"
      SPAN: "chatui"
    ports:
      - "8006:80"
    networks:
      - "aspire"
networks:
  aspire:
    driver: "bridge"
volumes:
  pgvolume:
    driver: "local"
